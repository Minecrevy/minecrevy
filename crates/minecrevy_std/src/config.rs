//! This module contains the [`ConfigPlugin`], which handles the configuration
//! process.

use bevy::prelude::*;
use minecrevy_io::packet::RawPacket;
use minecrevy_net::{
    client::{PacketWriter, ProtocolState},
    packet::Recv,
};
use minecrevy_protocol::config::{
    AcknowledgeFinish, ClientInformation, DataPack, Finish, KnownDataPacks,
};

use crate::play::EnterPlay;

/// [`Event`] that's triggered when a client has finished the login process, or
/// when the client is in play state but needs to be updated with the latest
/// configuration.
#[derive(Event, Clone, PartialEq, Debug)]
pub struct EnterConfig {
    /// The previous state, either [`Login`](ProtocolState::Login) or
    /// [`Play`](ProtocolState::Play).
    pub previous_state: ProtocolState,
}

/// [`Plugin`] for handling the configuration process.
#[derive(Default)]
pub struct ConfigPlugin;

impl Plugin for ConfigPlugin {
    fn build(&self, app: &mut App) {
        app.add_observer(Self::on_enter_config);
        app.add_observer(Self::on_client_information);
        app.add_observer(Self::on_known_data_packs);
        app.add_observer(Self::on_acknowledge_finish);
    }
}

impl ConfigPlugin {
    /// [`Observer`] [`System`] that handles the configuration state being entered.
    pub fn on_enter_config(trigger: Trigger<EnterConfig>, mut writer: PacketWriter) {
        let client = trigger.entity();

        writer.send(
            client,
            &KnownDataPacks {
                packs: Vec::from_iter([DataPack {
                    id: "core".into(),
                    namespace: "minecraft".into(),
                    version: "1.21.1".into(),
                }]),
            },
        );
    }

    /// [`Observer`] [`System`] that handles incoming [`ClientInformation`] packets.
    pub fn on_client_information(
        trigger: Trigger<Recv<ClientInformation>>,
        mut commands: Commands,
    ) {
        let packet = &trigger.event().0;
        let client = trigger.entity();

        commands.entity(client).insert(ClientInfo::from(packet));
    }

    /// [`Observer`] [`System`] that handles incoming [`KnownDataPacks`] packets.
    pub fn on_known_data_packs(
        trigger: Trigger<Recv<KnownDataPacks>>,
        mut writer: PacketWriter,
        packets: Local<RegistryDataPackets>,
    ) {
        let client = trigger.entity();

        let mut writer = writer.client(client);
        for packet in &**packets {
            writer.client().send_raw(packet.clone());
        }

        writer.send(&Finish);
    }

    /// [`Observer`] [`System`] that handles incoming [`AcknowledgeFinish`] packets.
    pub fn on_acknowledge_finish(
        trigger: Trigger<Recv<AcknowledgeFinish>>,
        mut writer: PacketWriter,
        mut commands: Commands,
    ) {
        let client = trigger.entity();

        writer.client(client).set_state(ProtocolState::Play);
        commands.entity(client).trigger(EnterPlay);
    }
}

/// [`Component`] that stores information about the client.
#[derive(Component, Clone, PartialEq, Debug)]
pub struct ClientInfo {
    /// The locale of the client, e.g. `en_US`.
    pub locale: String,
    /// The view distance of the client.
    pub view_distance: i8,
    /// The chat mode of the client.
    /// 0: enabled, 1: commands only, 2: hidden.
    pub chat_mode: i32,
    /// Whether chat colors are enabled.
    pub chat_colors: bool,
    /// The displayed skin parts of the client.
    pub displayed_skin_parts: u8,
    /// The main hand of the client.
    /// 0: left, 1: right.
    pub main_hand: i32,
    /// Whether text filtering is enabled.
    pub enable_text_filtering: bool,
    /// Whether server listings are allowed.
    pub allow_server_listings: bool,
}

impl From<&ClientInformation> for ClientInfo {
    fn from(info: &ClientInformation) -> Self {
        Self {
            locale: info.locale.clone(),
            view_distance: info.view_distance,
            chat_mode: info.chat_mode,
            chat_colors: info.chat_colors,
            displayed_skin_parts: info.displayed_skin_parts,
            main_hand: info.main_hand,
            enable_text_filtering: info.enable_text_filtering,
            allow_server_listings: info.allow_server_listings,
        }
    }
}

// TODO: replace these RegistryData packets with ones we've built ourselves,
// rather than ones replayed from vanilla.
#[derive(Deref, DerefMut)]
pub struct RegistryDataPackets(Vec<RawPacket>);

impl Default for RegistryDataPackets {
    fn default() -> Self {
        Self(vec![
            RawPacket::new(0x07, hex::decodeunwrap()),
            RawPacket::new(0x07, hex::decode("136D696E6563726166743A636861745F74797065070E6D696E6563726166743A6368617400176D696E6563726166743A656D6F74655F636F6D6D616E64001E6D696E6563726166743A6D73675F636F6D6D616E645F696E636F6D696E67001E6D696E6563726166743A6D73675F636F6D6D616E645F6F7574676F696E6700156D696E6563726166743A7361795F636F6D6D616E6400236D696E6563726166743A7465616D5F6D73675F636F6D6D616E645F696E636F6D696E6700236D696E6563726166743A7465616D5F6D73675F636F6D6D616E645F6F7574676F696E6700").unwrap()),
            RawPacket::new(0x07, hex::decodeunwrap()),
            RawPacket::new(0x07, hex::decode("176D696E6563726166743A7472696D5F6D6174657269616C0A126D696E6563726166743A616D65746879737400106D696E6563726166743A636F7070657200116D696E6563726166743A6469616D6F6E6400116D696E6563726166743A656D6572616C64000E6D696E6563726166743A676F6C64000E6D696E6563726166743A69726F6E000F6D696E6563726166743A6C6170697300136D696E6563726166743A6E657468657269746500106D696E6563726166743A71756172747A00126D696E6563726166743A72656473746F6E6500").unwrap()),
            RawPacket::new(0x07, hex::decode("166D696E6563726166743A776F6C665F76617269616E74090F6D696E6563726166743A617368656E000F6D696E6563726166743A626C61636B00126D696E6563726166743A63686573746E7574000E6D696E6563726166743A70616C65000F6D696E6563726166743A7275737479000F6D696E6563726166743A736E6F777900116D696E6563726166743A73706F7474656400116D696E6563726166743A73747269706564000F6D696E6563726166743A776F6F647300").unwrap()),
            RawPacket::new(0x07, hex::decode("1A6D696E6563726166743A7061696E74696E675F76617269616E74320F6D696E6563726166743A616C62616E000F6D696E6563726166743A617A74656300106D696E6563726166743A617A7465633200126D696E6563726166743A6261636B7961726400116D696E6563726166743A6261726F717565000E6D696E6563726166743A626F6D6200116D696E6563726166743A626F757175657400176D696E6563726166743A6275726E696E675F736B756C6C000E6D696E6563726166743A6275737400126D696E6563726166743A636176656269726400126D696E6563726166743A6368616E67696E67000F6D696E6563726166743A636F74616E00116D696E6563726166743A636F757262657400116D696E6563726166743A6372656562657400156D696E6563726166743A646F6E6B65795F6B6F6E67000F6D696E6563726166743A656172746800116D696E6563726166743A656E64626F7373000E6D696E6563726166743A6665726E00126D696E6563726166743A666967687465727300116D696E6563726166743A66696E64696E67000E6D696E6563726166743A6669726500106D696E6563726166743A67726168616D00106D696E6563726166743A68756D626C65000F6D696E6563726166743A6B6562616200116D696E6563726166743A6C6F776D697374000F6D696E6563726166743A6D6174636800146D696E6563726166743A6D656469746174697665000D6D696E6563726166743A6F726200126D696E6563726166743A6F776C656D6F6E7300116D696E6563726166743A7061737361676500126D696E6563726166743A7069677363656E65000F6D696E6563726166743A706C616E7400116D696E6563726166743A706F696E746572000E6D696E6563726166743A706F6E64000E6D696E6563726166743A706F6F6C00166D696E6563726166743A707261697269655F72696465000D6D696E6563726166743A73656100126D696E6563726166743A736B656C65746F6E00196D696E6563726166743A736B756C6C5F616E645F726F736573000F6D696E6563726166743A737461676500146D696E6563726166743A73756E666C6F7765727300106D696E6563726166743A73756E736574000F6D696E6563726166743A746964657300126D696E6563726166743A756E7061636B6564000E6D696E6563726166743A766F696400126D696E6563726166743A77616E646572657200136D696E6563726166743A77617374656C616E64000F6D696E6563726166743A7761746572000E6D696E6563726166743A77696E6400106D696E6563726166743A77697468657200").unwrap()),
            RawPacket::new(0x07, hex::decode("186D696E6563726166743A64696D656E73696F6E5F7479706504136D696E6563726166743A6F766572776F726C6400196D696E6563726166743A6F766572776F726C645F636176657300116D696E6563726166743A7468655F656E6400146D696E6563726166743A7468655F6E657468657200").unwrap()),
            RawPacket::new(0x07, hex::decodeunwrap()),
            RawPacket::new(0x07, hex::decodeunwrap()),
            RawPacket::new(0x07, hex::decodeunwrap()),
            RawPacket::new(0x07, hex::decodeunwrap()),
        ])
    }
}
